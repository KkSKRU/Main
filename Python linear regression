import pandas as pd

advertising = pd.read_csv('/content/tvmarketing.csv')

# TV - advertising budget spent on TV marketing
# Sales - how much we have sold (revenue, income)

advertising.head() #first 5 rows

advertising.describe()

"""### Regression plot"""

import seaborn as sns

sns.regplot(
    data=advertising,
    x='TV',
    y="Sales",
    ci=99,
    marker="x",
    color="black",
    line_kws=dict(color="green"))

# Pearson correlation koefficient
advertising.corr() #calculate corr for whole dataframe

advertising['TV'].corr(advertising['Sales']) #positive, strong

"""### SUPERVISED VS UNSUPERVISED

![jupyter.png](https://miro.medium.com/v2/resize:fit:960/1*31iqrQyCqIuuGPLUK_BjMQ.png)

# Training linear regression model

https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html
"""

# Preparing X and Y
X = advertising.drop('Sales', axis=1) #independent variable
X.head()

Y = advertising.drop('TV', axis=1) #the outcome, dependent
Y.head()

"""# Train/Test sets"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, Y, train_size = 0.7, random_state=42)

X_train

# COLUMN - FEATURE
# ROW - OBSERVATION

"""### Train the model"""

from sklearn.linear_model import LinearRegression #Import the model

model = LinearRegression() #Initialize the model

model.fit(X_train, y_train) #Fit the model

### Y = mX + b ###

print(f'Model intercept is: {model.intercept_}')
print(f'Model coefficient is: {model.coef_}')

"""### A prediction"""

my_new_budget = [[50]] #2D array dataset

my_predicted_sales = model.predict(my_new_budget)

print(f'When the new budget is {my_new_budget[0][0]}, then predicted sales are {round(my_predicted_sales[0][0])}.')

X_test.head()

y_pred = model.predict(X_test)

final_df = pd.DataFrame()
final_df['TV'] = X_test
final_df['Actual_sales'] = y_test
final_df['Predicted_sales'] = y_pred

final_df['ABS_Error_Actual_vs_Predicted'] = abs(final_df['Actual_sales']-final_df['Predicted_sales'])

final_df.head()

