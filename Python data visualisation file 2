import pandas as pd
import matplotlib.pyplot as plt

pokemon_df = pd.read_csv('/content/Pokemon.csv')

pokemon_df.head(n=5)

#create histogram of column speed
plt.hist(pokemon_df['Speed'], color = 'lightblue', edgecolor = 'black')
plt.xlabel('Total')
plt.ylabel('Frequency')

##add to histogram min, max, mean lines
#Avg line
plt.axvline(pokemon_df['Speed'].mean(), linestyle='dashed', color='gray')

#Min line
plt.axvline(pokemon_df['Speed'].min(), linestyle = 'dashdot', color='blue')

#Max line
plt.axvline(pokemon_df['Speed'].max(), linestyle = 'dashed', color='brown')

#correlation
#scatter plot between variables attack and defense
plt.scatter(pokemon_df['Attack'], pokemon_df['Defense'], color ='blue', alpha=0.5)
plt.xlabel('Attack')
plt.ylabel('Defense')

#scatter plot for variables speed and defense
plt.scatter(pokemon_df['Speed'], pokemon_df['Defense'], color ='red', alpha=0.5)
plt.xlabel('Speed')
plt.ylabel('Defense')

#scatterplot for variables hp and defense
plt.scatter(pokemon_df['HP'], pokemon_df['Defense'], color ='purple', alpha=0.5)
plt.xlabel('HP')
plt.ylabel('Defense')
plt.title('Scatter Plot')

#pearson correlation
#result of this correlation is between -1 and 1
#-1 perfect negative relationship
# 1 perfect psitive relationship

"""The correlation coefficient indicates the strength and direction of the statistical relationship between two variables. The coefficient ranges from -1 to 1, with a value of 0.43 signifying a positive but moderately strong relationship between the two variables.

- A positive correlation coefficient means that the variables increase together. Therefore, as one variable increases, the other also tends to increase, and vice versa.
The closer the correlation coefficient is to 1, the stronger the positive relationship.
- A correlation coefficient of 0.43 is not very high, but it indicates a moderately positive relationship.
If the correlation coefficient were negative, it would suggest that as one variable increases, the other variable decreases.
- A correlation coefficient of -1 indicates a perfect negative relationship.
Thus, a correlation coefficient of 0.43 might suggest that, for example, as Pok√©mon's Attack values increase, their Defense values tend to increase as well, but the relationship is not very strong.
"""

#pearson correlation between attack and defense
correlation1 = pokemon_df['Attack'].corr(pokemon_df['Defense'])
correlation1

#pearson correlation between speed and defense
correlation2 = pokemon_df['Speed'].corr(pokemon_df['Defense'])
correlation2

#select only numeric columns
numeric_columns = pokemon_df.select_dtypes(include=['number'])
numeric_columns = numeric_columns.drop('#', axis=1)
numeric_columns

# Select only numeric columns

numeric_columns = pokemon_df.select_dtypes(include=['number'])
numeric_columns = numeric_columns.drop('#', axis=1)
numeric_columns
target_column = 'Attack'
correlation_results = {} #key = column, val=pearson_correlation

# for loop comparing target column and all other columns in the DataFrame

for col in numeric_columns.columns:
  if col =='Attack':
    continue
  correlation = pokemon_df[target_column].corr(pokemon_df[col])
  correlation_results[col] = correlation

correlation_results

#correlation matrix
correlation_matrix = numeric_columns.corr()
correlation_matrix

#visualizing with seaborn
import seaborn as sns

plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='Pastel1')
plt.title('Correlation Matrix')

#linnear regression
sns.regplot(x='Attack', y='Defense', data=pokemon_df)

sns.regplot(
    data=pokemon_df, x='Speed', y="Defense",
    ci=99, marker="x", color=".3", line_kws=dict(color="r"),
)

correlation2 = pokemon_df['Speed'].corr(pokemon_df['Defense'])
print('Pearson correlation coefficient:', correlation2)
