import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        int size = 3;
        int[][] grid = new int[size][size];

        System.out.println("Welcome to Tic-Tac-Toe!");

        Scanner input = new Scanner(System.in);
        int currentPlayer = 1; // Start with Player 1

        while (true) {
            printArray(grid, size);

            // Ask the current player for row and column
            System.out.println("Player " + currentPlayer + ", choose your row (1-3): ");
            int userRow = input.nextInt() - 1; // Subtract 1 to convert to 0-based index

            System.out.println("Player " + currentPlayer + ", choose your column (1-3): ");
            int userColumn = input.nextInt() - 1; // Subtract 1 to convert to 0-based index

            // Validate the move
            if (grid[userRow][userColumn] != 0) {
                System.out.println("Cell already taken! Try again.");
                continue; // Ask for input again
            }

            // Update grid
            grid[userRow][userColumn] = currentPlayer;

            // Check for winning conditions
            if (checkRowWin(grid, userRow, currentPlayer) || checkColumnWin(grid, userColumn, currentPlayer)) {
                printArray(grid, size);
                System.out.println("Congratulations! Player " + currentPlayer + " has won!");
                break;
            }

            // Switch turns
            currentPlayer = 3 - currentPlayer; // Switch between 1 and 2
        }

        input.close();
    }

    public static void printArray(int[][] array, int size) {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                System.out.print(array[i][j] + " ");
            }
            System.out.println();
        }
    }

    // Check if the row is filled with the same player's value
    public static boolean checkRowWin(int[][] array, int row, int player) {
        for (int i = 0; i < array[row].length; i++) {
            if (array[row][i] != player) {
                return false;
            }
        }
        return true;
    }

    // Check if the column is filled with the same player's value
    public static boolean checkColumnWin(int[][] array, int column, int player) {
        for (int i = 0; i < array.length; i++) {
            if (array[i][column] != player) {
                return false;
            }
        }
        return true;
    }
}
